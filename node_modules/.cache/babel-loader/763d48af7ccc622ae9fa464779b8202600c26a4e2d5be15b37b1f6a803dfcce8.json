{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Toast } from './utils/helpers';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      openaiEndpoint: process.env.VUE_APP_OPENAI_ENDPOINT,\n      openaiModelDeploymentName: process.env.VUE_APP_OPENAI_MODEL_DEPLOYMENT_NAME,\n      openaiKey: process.env.VUE_APP_OPENAI_KEY,\n      prompt: '',\n      chatMessages: [],\n      botMessageArrayIndex: 0\n    };\n  },\n  mounted() {\n    this.chatMessages.push({\n      msg: '您好，我是 Azure OpenAI 的 ChatGPT，有任何問題都可以問我 ^_^',\n      role: 'Bot'\n    });\n  },\n  watch: {\n    chatMessages: {\n      handler() {\n        window.scrollTo({\n          left: 0,\n          top: document.body.scrollHeight,\n          behavior: 'smooth'\n        });\n      },\n      deep: true\n    }\n  },\n  methods: {\n    sendMessage() {\n      if (this.prompt !== '') {\n        this.showUserMessage();\n        this.postOpenAI(this.prompt);\n        this.prompt = '';\n      } else {\n        Toast.fire({\n          icon: 'error',\n          title: '請輸入訊息 !'\n        });\n      }\n    },\n    showUserMessage() {\n      this.chatMessages.push({\n        msg: this.prompt,\n        role: 'User'\n      });\n    },\n    showBotMessage(botMessage) {\n      this.chatMessages.push({\n        msg: botMessage,\n        role: 'Bot'\n      });\n      this.botMessageArrayIndex = this.chatMessages.length - 1;\n    },\n    async postOpenAI(userPrompt = '') {\n      this.showBotMessage('思考中 ~');\n      const reqBody = {\n        messages: [{\n          role: 'system',\n          content: '你是一個名叫「OpenAI ChatGPT」的角色。請用小於6歲的孩子能夠聽懂的語言和親切、容易親近的口吻來講話。'\n        }, {\n          role: 'user',\n          content: userPrompt\n        }, {\n          role: 'assistant',\n          content: ''\n        }],\n        temperature: 0.7,\n        top_p: 0.95,\n        frequency_penalty: 0,\n        presence_penalty: 0,\n        max_tokens: 800,\n        stop: null\n      };\n      try {\n        const res = await axios.post(`${this.openaiEndpoint}openai/deployments/${this.openaiModelDeploymentName}/chat/completions?api-version=2023-03-15-preview`, JSON.stringify(reqBody), {\n          headers: {\n            'content-type': 'application/json',\n            'api-key': this.openaiKey\n          }\n        });\n        this.chatMessages[this.botMessageArrayIndex].msg = res.data.choices[0].message.content;\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Toast","name","data","openaiEndpoint","process","env","VUE_APP_OPENAI_ENDPOINT","openaiModelDeploymentName","VUE_APP_OPENAI_MODEL_DEPLOYMENT_NAME","openaiKey","VUE_APP_OPENAI_KEY","prompt","chatMessages","botMessageArrayIndex","mounted","push","msg","role","watch","handler","window","scrollTo","left","top","document","body","scrollHeight","behavior","deep","methods","sendMessage","showUserMessage","postOpenAI","fire","icon","title","showBotMessage","botMessage","length","userPrompt","reqBody","messages","content","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","stop","res","post","JSON","stringify","headers","choices","message","error","console","log","response"],"sources":["/Users/wilson/projectCode/mylearning/Vue_Azure_OpenAI_ChatGPT/src/App.vue"],"sourcesContent":["<template>\n  <header class=\"header\">\n    <h1>Azure OpenAI ChatGPT Bot</h1>\n  </header>\n  <section class=\"content\" ref=\"msgContainer\">\n    <ul id=\"chat-area\" v-for=\"(message, index) in chatMessages\" :key=\"index\">\n      <li v-if=\"message.role == 'Bot'\">\n        <div class=\"balloon\">\n          <img class=\"img-circle\" src=\"openai.png\" alt=\"image\" />\n          <p class=\"talk\">{{ message.msg }}</p>\n        </div>\n      </li>\n      <li v-else>\n        <div class=\"balloon balloon-r\">\n          <p class=\"talk talk-r\">{{ message.msg }}</p>\n        </div>\n      </li>\n    </ul>\n  </section>\n  <footer class=\"footer\">\n    <input\n      id=\"msg-send\"\n      class=\"msg-input\"\n      placeholder=\"請輸入訊息\"\n      v-model=\"prompt\"\n      v-on:keyup.enter=\"sendMessage()\"\n    >\n    <button class=\"btn-submit\" type=\"button\" @click=\"sendMessage()\">\n      傳送\n    </button>\n  </footer>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { Toast } from './utils/helpers';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      openaiEndpoint: process.env.VUE_APP_OPENAI_ENDPOINT,\n      openaiModelDeploymentName: process.env.VUE_APP_OPENAI_MODEL_DEPLOYMENT_NAME,\n      openaiKey: process.env.VUE_APP_OPENAI_KEY,\n      prompt: '',\n      chatMessages: [],\n      botMessageArrayIndex: 0,\n    };\n  },\n  mounted() {\n    this.chatMessages.push({\n      msg: '您好，我是 Azure OpenAI 的 ChatGPT，有任何問題都可以問我 ^_^',\n      role: 'Bot',\n    });\n  },\n  watch: {\n    chatMessages: {\n      handler() {\n        window.scrollTo({\n          left: 0,\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    sendMessage() {\n      if (this.prompt !== '') {\n        this.showUserMessage();\n        this.postOpenAI(this.prompt);\n        this.prompt = '';\n      } else {\n        Toast.fire({\n          icon: 'error',\n          title: '請輸入訊息 !',\n        });\n      }\n    },\n    showUserMessage() {\n      this.chatMessages.push({\n        msg: this.prompt,\n        role: 'User',\n      });\n    },\n    showBotMessage(botMessage) {\n      this.chatMessages.push({\n        msg: botMessage,\n        role: 'Bot',\n      });\n      this.botMessageArrayIndex = this.chatMessages.length - 1;\n    },\n    async postOpenAI(userPrompt = '') {\n      this.showBotMessage('思考中 ~');\n      const reqBody = {\n        messages: [\n          {\n            role: 'system',\n            content: '你是一個名叫「OpenAI ChatGPT」的角色。請用小於6歲的孩子能夠聽懂的語言和親切、容易親近的口吻來講話。',\n          },\n          {\n            role: 'user',\n            content: userPrompt,\n          },\n          {\n            role: 'assistant',\n            content: '',\n          },\n        ],\n        temperature: 0.7,\n        top_p: 0.95,\n        frequency_penalty: 0,\n        presence_penalty: 0,\n        max_tokens: 800,\n        stop: null,\n      };\n      try {\n        const res = await axios.post(\n          `${this.openaiEndpoint}openai/deployments/${this.openaiModelDeploymentName}/chat/completions?api-version=2023-03-15-preview`,\n          JSON.stringify(reqBody),\n          {\n            headers: {\n              'content-type': 'application/json',\n              'api-key': this.openaiKey,\n            },\n          },\n        );\n        this.chatMessages[this.botMessageArrayIndex].msg = res.data.choices[0].message.content;\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n* {\n  margin: 0;\n  padding: 0;\n}\n.header {\n  top: 0;\n  position: sticky;\n  z-index: 1;\n  width: 100%;\n  height: 50px;\n  font-size: 10px;\n  text-align: center;\n  line-height: 50px;\n  background-color: rgb(30, 144, 255);\n  color: white;\n}\n\n.content {\n  width: 100%;\n  min-height: calc(100vh - 100px);\n  margin-bottom: 50px;\n  background-color: lightgray;\n}\n\n#chat-area {\n  padding: 10px;\n  list-style: none;\n}\n\n.balloon {\n  margin: 20px 0;\n  display: flex;\n  align-items: flex-start;\n}\n.balloon-r {\n  margin-right: 15px;\n  justify-content: flex-end;\n}\n\n.img-circle {\n  width: 50px;\n  height: 50px;\n  margin: 0 15px;\n  border-radius: 25px;\n  background-color: white;\n}\n\n.talk {\n  max-width: 500px;\n  padding: 10px;\n  border-radius: 10px;\n  background: white;\n}\n.talk-r {\n  background-color: skyblue;\n}\n\n.footer {\n  position: fixed;\n  z-index: 1;\n  bottom: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n}\n\n.msg-input {\n  width: 70%;\n  margin-right: 10px;\n  padding: 5px 15px;\n  border: 1px solid gray;\n  border-radius: 25px;\n  background-color: whitesmoke;\n}\n\n.btn-submit {\n  padding: 6px;\n  border: none;\n  border-radius: 5px;\n  background-color: deepskyblue;\n  color: white;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}